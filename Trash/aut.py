(lambda __print, __g, __contextlib, __y: (lambda __mod: [[[[(lambda __out: (lambda __ctx: [__ctx.__enter__(), __ctx.__exit__(None, None, None), __out[0](lambda: [[(os.system('clear'), (__print(logo), [[[(e.write(d), (e.close(), [(lambda __items, __after, __sentinel: __y(lambda __this: lambda: (lambda __i: [(__print(('\r\r# wait ' + o), end=' '), (sys.stdout.flush(), (time.sleep(3), __this())[1])[1])[1] for __g['o'] in [(__i)]][0] if __i is not __sentinel else __after())(next(__items, __sentinel)))())(iter(asu), lambda: (__print('\n# hasil dec: out.py'), (__print('# Selesai'), (time.sleep(0.6), None)[1])[1])[1], []) for __g['asu'] in [(['.   ', '..  ', '... ', '.   ', '..  ', '... '])]][0])[1])[1] for __g['e'] in [(open('out.py', 'w'))]][0] for __g['d'] in [((((((('# Decompile by Sumarr ID\n# Time decompile ' + times) + '\n# uncompyle6 version 3.7.1\n# Python bytecode 2.7 (62211)\n# Decompiled from: Python 3.8.0 (default, Dec  5 2019, 10:18:50)\n# [Clang 8.0.7 (https://android.googlesource.com/toolchain/clang b55f2d4ebfd35bf6\n# Embedded file name: ') + a) + '\n# Compiled at: 2020-06-27 20:27:04\nimport os,sys\n\na="HACK FACEBOOK TARGET"\ndef asu():\n    print a\n    _a=raw_input(\'[+] username: \')\n    _b=raw_input(\'[+] password: \')\n    print "[*] login sukses"\n    os.sys.exit()\ndef kon():\n    asu()\n\nkon()\n# okay decompiling ') + a) + '\n'))]][0] for __g['a'] in [(raw_input('# nama file: '))]][0])[1])[1] for __g['times'] in [(datetime.now().strftime('%H:%M:%S'))]][0] for __g['logo'] in [('[+]\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94[+]\n| [+] AUTO DECOMPILE PYTHON [+] |\n|    ***  SEMUA JENIS  ***      |\n|                               |\n| author : Sumarr ID            |\n| gitlab : gitlab.com/Sumarr-ID |\n[+]\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94[+]')]][0])][2])(__contextlib.nested(type('except', (), {'__enter__': lambda self: None, '__exit__': lambda __self, __exctype, __value, __traceback: __exctype is not None and ([True for __out[0] in [((__print('install uncompye6 nya dulu say'), (os.system('pip2 install uncompyle6'), lambda after: after())[1])[1])]][0])})(), type('try', (), {'__enter__': lambda self: None, '__exit__': lambda __self, __exctype, __value, __traceback: [False for __out[0] in [((lambda __mod: [(lambda __after: __after()) for __g['decompile'] in [(__mod.decompile)]][0])(__import__('uncompyle6.main', __g, __g, ('decompile',), 0)))]][0]})())))([None]) for __g['os'] in [(__import__('os', __g, __g))]][0] for __g['sys'] in [(__import__('sys', __g, __g))]][0] for __g['time'] in [(__import__('time', __g, __g))]][0] for __g['datetime'] in [(__mod.datetime)]][0])(__import__('datetime', __g, __g, ('datetime',), 0)))(__import__('__builtin__', level=0).__dict__['print'], globals(), __import__('contextlib', level=0), (lambda f: (lambda x: x(x))(lambda y: f(lambda: y(y)()))))
