# Filenames : <Sazxt>
# python bytecode : 2.7
# Time Succses Parser : Mon Jul  6 13:43:34 2020
# Auto Parser Dis Version : 1.1.0
# Source : https://www.github.com/Datez-Kun

import os, sys, time
from time import sleep
m = '\x1b[31;1m'
h = '\x1b[32;1m'
k = '\x1b[33;1m'
b = '\x1b[34;1m'
u = '\x1b[35;1m'
bi = '\x1b[36;1m'
pu = '\x1b[37;1m'
p = '\x1b[0m'
hii = '\x1b[32;4m'
hi = '\x1b[30;1m'

def meki():
    ngeue = [
     '.   ', '..  ', '... ', '.... ', '.....', '......']
    for ngentot in ngeue:
        print m + '\r[' + pu + '\xe2\x80\xa2' + m + '] ' + u + 'Sedang Proses' + pu + ngentot,
        sys.stdout.flush()
        time.sleep(2)


def Aing_Sanz():
    load(u + ' \xe2\x95\x94\xe2\x95\xa6\xe2\x95\x97 \xe2\x95\x94\xe2\x95\x90\xe2\x95\x97 \xe2\x95\xa6\xe2\x95\x90\xe2\x95\x97 \xe2\x95\x94\xe2\x95\xa6\xe2\x95\x97 \xe2\x95\xa6 \xe2\x95\xa6 \xe2\x95\x90\xe2\x95\x97 \xe2\x95\xa6     ' + bi + '\xe2\x95\xa6\xe2\x95\x94\xe2\x95\x90 \xe2\x95\x94\xe2\x95\x90\xe2\x95\x97 \xe2\x95\xa6 \xe2\x95\xa6')
    load(u + '  \xe2\x95\x91  \xe2\x95\xa0\xe2\x95\xa3  \xe2\x95\xa0\xe2\x95\xa6\xe2\x95\x9d \xe2\x95\x91\xe2\x95\x91\xe2\x95\x91 \xe2\x95\x91 \xe2\x95\x91 \xe2\x95\x94\xe2\x95\xa9\xe2\x95\xa6\xe2\x95\x9d ' + m + '<' + h + '\xe2\x80\xa2' + m + '> ' + bi + '\xe2\x95\xa0\xe2\x95\xa9\xe2\x95\x97 \xe2\x95\xa0\xe2\x95\xa3  \xe2\x95\x9a\xe2\x95\xa6\xe2\x95\x9d')
    load(u + '  \xe2\x95\xa9  \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d \xe2\x95\xa9\xe2\x95\x9a\xe2\x95\x90 \xe2\x95\xa9 \xe2\x95\xa9 \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d \xe2\x95\xa9 \xe2\x95\x9a\xe2\x95\x90     ' + bi + '\xe2\x95\xa9 \xe2\x95\xa9 \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d  \xe2\x95\xa9 ' + m + '(' + h + 'New' + m + ')')
    load(b + ' \xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97')
    load(m + '[' + pu + '+' + m + '] ' + pu + 'Author ' + m + ': ' + bi + 'Sanz                           ' + m + '[' + pu + '+' + m + ']')
    load(m + '[' + pu + '+' + m + '] ' + pu + 'Youtube' + m + ': ' + bi + 'SANZ SOEKAMTI                  ' + m + '[' + pu + '+' + m + ']')
    load(m + '[' + pu + '+' + m + '] ' + pu + 'Github ' + m + ': ' + h + '' + hii + 'https://github.com/B4N954N2-ID' + p + ' ' + m + '[' + pu + '+' + m + ']')
    load(b + ' \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d')
    load(m + '  [' + pu + 'ESC' + m + ']  [' + pu + '/' + m + ']  [' + pu + '-' + m + ']  [' + pu + 'HOME' + m + ']  [' + pu + '|' + m + ']  [' + pu + 'END' + m + ']  [' + pu + 'PGUP' + m + ']')
    load(b + ' <\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90>\n')


def load(s):
    for c in s + '\n':
        sys.stdout.write(c)
        sys.stdout.flush()
        time.sleep(0.001)


def run(s):
    for c in s + '\n':
        sys.stdout.write(c)
        sys.stdout.flush()
        time.sleep(0.1)


def main():
    sleep(0.5)
    os.system('clear')
    sleep(0.5)
    Aing_Sanz()
    raw_input(m + '[' + pu + '!' + m + '] ' + p + 'Klik Enter Untuk Melanjutkan ' + m + ':)')
    sleep(2)
    run(m + '[' + pu + '!' + m + '] ' + p + 'Menghapus File Default Termux')
    sleep(5)
#    try:
#        os.mkdir('/data/data/com.termux/files/home/.termux')
#    except:
#        pass

    meki()
    sleep(2)
    print pu + '\n[' + h + '\xe2\x9c\x93' + pu + '] ' + h + 'Success'
    sleep(2)
    run(m + '[' + pu + '!' + m + '] ' + p + 'Menambahkan Tombol Termux Special')
    sleep(6)
    key = "extra-keys = [['ESC','/','-','HOME','UP','END','PGUP'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']]"
#    sanz = open('/data/data/com.termux/files/home/.termux/termux.properties', 'w')
#    sanz.write(key)
#    sanz.close()
    meki()
    sleep(2)
    print pu + '\n[' + h + '\xe2\x9c\x93' + pu + '] ' + h + 'Success'
#    os.system('xdg-open https://youtube.com/SanzSoekamti')


try:
    main()
except KeyboardInterrupt:
    exit(m + '[' + pu + '!' + m + '] ' + p + 'Ctrl + C Detected')
